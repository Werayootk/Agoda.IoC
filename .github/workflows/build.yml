name: .NET Core Build and Publish

on:
  push:
    branches: main
  pull_request:
    branches: main

env:
  NETCORE_VERSION: '3.1.402'  
  GIT_REPO_ROOT: src
  MAJOR_MINOR_VERSION: 1.1.
  SOLUTION_FILE: Agoda.IoC.sln

jobs:
  build:
    name: Build Package 
    runs-on: windows-latest # using windows agent for net472 build.

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK ${{ env.NETCORE_VERSION }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.NETCORE_VERSION }}

    - name: Restore
      working-directory: ${{ env.GIT_REPO_ROOT }}        
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build
      working-directory: ${{ env.GIT_REPO_ROOT }}        
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

    - name: Test     
      run: dotnet test src/Agoda.IoC.Unity.UnitTests/Agoda.IoC.Unity.UnitTests.csproj --no-build --logger GitHubActions /p:CoverletOutput=results /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

    - name: Pack
      working-directory: ${{ env.GIT_REPO_ROOT }}    
      run: dotnet pack ${{ env.SOLUTION_FILE }} --configuration Release -o finalpackage --no-build -p:PackageVersion=${{ env.MAJOR_MINOR_VERSION }}${{ github.run_number }}

    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
        name: nupkg
        path: ${{ env.GIT_REPO_ROOT }}/finalpackage

    - uses: codecov/codecov-action@v1
      with:
        files: Agoda.IoC.Unity.UnitTests\results.opencover.xml,Agoda.IoC.Unity.NetCore\results.opencover.xml # optional
        fail_ci_if_error: true # optional (default = false)

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    name: Deploy Packages
    runs-on: ubuntu-latest
    steps:
      - name: Download Package artifact
        uses: actions/download-artifact@master
        with:
          name: nupkg
          path: ./nupkg

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2
        with:
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}
          nuget-version: latest

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.NETCORE_VERSION }}

      - name: Push to NuGet
        run: dotnet nuget push nupkg/**/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://nuget.org --skip-duplicate